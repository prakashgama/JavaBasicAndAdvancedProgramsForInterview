
Prakash
Prakas
Praka

String Builder sb=new StringBuilder()

String  MyString(String s)
{
if(s.length==1)
{
Return s;
}
sb.append(MyString(s.substring(0,s.lenght-1)));
Return sb.toString();



0 1 1 1 
0 0 1 1
1 1 1 1  
0 0 0 0


List<Integer> ss=new ArrayList();
Int max=0;

}



Find frequency of given string using java8 

Employee name ,city --> return MAP(city,List<name>);






Int rowWithOne(int [][]a)
{
Int oldmax=0;
Int rowNum=0;
Int max=0;
for(int i=0;j=0;i<a.length();)
{
max+=a[i][j];
J++;
if(j==a.length())
{
j=0;
if(max>oldmax)
{
oldmax=max;
rownum=i;
max=0;
}
i++;
}
Return rownum;
}



}




Employee
Emp id,emp nam, department, designation, dat of joine



dat of join>10 Jan

List<Emoloyee> E=

E.Stream().filter(()->x.getDateofJoin()>new Date(10 jan)).map(c-> new NEWEMPLOYE(c.getID,c.GetName)).collect(

Create a new Object

NEWEMPLOTE-->ID,NAME

output --> List<NEWEMPLOYE> -->{new Employee()}

1)

----------------------------------------------------------------

{
Employee :
   id:
   name:
   Addrees 
      id:
	  city:
	  
}

user/v1/search/1/

public void Searchmethod(SearchClass obj)
{


}




input string "Pr@#aka@#sh" and output string will be "hs@#aka@#rp"



int a[]=new int[s.length];

int j=s.length;

for(int i=0;i<s.length;i++)
{

if(Character.isSpecialChar(s.charAT(i)))
{
a[i]=s.charAT(i);
}
else
{
if(!Character.isSpecialChar(s.charAT(j) && a[i]==null;)
a[i]=s.charAT(j);
j--;
}


Linked List(Node,nextAddress)

2 Linked list -->[1,2,3] 
				  0,1,X						
[1,3]
 0,X
 
 {1,1}-->{2,2}-->{3,1}
{1,1}-->{3,X}--

for(int i=0;i<l.size;i++)
if(l.get(i)=='X')
{
Node A =l.get(i);
}
if(l2.get(i)=='X')
{
Node b=l.get(i);
}


{1,1}-->{2,2}-->{3,1}

head ==Node0;

findCirculaR(Linked list h)
{

HashSet<> t=new HashSet();
while(h.hasnextNode)

if(t.contain(h))
{
syso("circular");
}
else
{
t.add(h.getNeXtNode());
h=h.getNeXtNode();
}




}




}
//-->a[10]={,,@,#,,..}
int j=0;
for(int i=s.length;i<0;i--)
{
if(!Character.isSpecialChar(s.charAT(i)))
{
if(a[j]!=null)
a[j]=s.charAT(i);
}
j++;
}
}







List fruits = ["Orange" , "Mango" , "Cherry" , "Banana" , "Apple"];


fruits.stream().filter(x->x.toUpperCase().charAt(0)=='A' || x.toUpperCase().charAt.(0)=='E' ).
map(t->t.charAt(t.length-1)).collect(collector.toList()):

Write a function returning whether 2 string are anagrams or not
e.g. CAT and ACT are anagrams , BAT and CAT are not


String s="CAT";
String s2="ACT";

public boolean checkAnagram(s,s2)
{

if(s.length!=s2.length)
return false;

Hashmap<Character,Integer> a=new Hashmap();



for(int i=0;i<s.length;i++)
{
if(a.contains(s.charAt(i))
a.put(s.charAt(i),a.get(s.charAt(i))+1);
else
a.put(s.charAt(i),1);
}

for(int i=0;i<s2.length;i++)
{
if(a.contains(s2.charAt(i))
{
if(a.get(s2.charAt(i))==1)
a.remove(s2.charAt(i));
else
a.put()
}
else
a2.put(s2.charAt(i),1);
}



return true;
else
return false;

}

memory leakage


[10:00 am] Vijay Kumar
    Count pairs with given sum
Input  :  arr[] = {​​​1, 5, 7, -1,12,6}​​​, 
          sum = 6
Output :  2
Pairs with sum 6 are (1, 5) and (7, -1)
Input  :  arr[] = {​​​1, 5, 7, -1, 5}​​​, 
          sum = 6
Output :  3
Pairs with sum 6 are (1, 5), (7, -1) &
                     (1, 5)         

1,5
7,-1
12,-6


int count=0;
for(int i=0;i<a.lenght;i++)

int looking=sum-a[i];

for(int j=i+1;j<a.lenght;j++
{
if(looking==a[j]
count++;

}
list

for(i)
looking=sum-a[i]
if(list.contain(looking))
Map.put(i,









[10:46 am] Vijay Kumar
    Write an SQL query to fetch only even rows from the table.
​[10:46 am] Vijay Kumar
    Write SQL query to find the 3rd highest salary from a table 
​[10:46 am] Vijay Kumar
    Write an SQL query to fetch records that are present in one table but not in another table






Employee
id name salary
1
2
3
4
5

Employee2
1
3
4
select * from employee where id=(select id from employee where id%2=0);

select * from( select ename, sal, dense_rank() over(order by sal desc)r from Employee) where r=&n;


select * from Employee where 

select * from employee left join employee2;




public void test(int x) 
{ 
    int odd = 1; 
    if(odd) 
    {
        System.out.println("odd"); 
    } 
    else 
    {
        System.out.println("even"); 
    } 
}



public class Test {
	public static void main(String[] args) {
		foo(null);
	}
	public static void foo(Object o) {
		System.out.println("Object argument");
	}
	public static void foo(String s) {
		System.out.println("String argument");
	}
  
  public static void foo(StringBuffer i){
	System.out.println("StringBuffer impl");
}

}



public class Foo 
{  
    public static void main(String[] args) 
    {
        try 
        { 
            return;
        } 
        finally 
        {
            System.out.println( "Finally" ); 
        } 
    } 
}


try 
{ 
    int x = 0; 
    int y = 5 / x; 
} 
catch (Exception e) 
{
    System.out.println("Exception"); 
} 
catch (ArithmeticException ae) 
{
    System.out.println(" Arithmetic Exception"); 
} 
System.out.println("finished");




1.	class OverloadingCalculation3{  
2.	  void sum(int a,long b){System.out.println("a method invoked");}  
3.	  void sum(long a,int b){System.out.println("b method invoked");}  
4.	  
5.	  public static void main(String args[]){  
6.	  OverloadingCalculation3 obj=new OverloadingCalculation3();  
7.	  obj.sum(20,20);  
8.	  }  
9.	}  



public class MainClass 
{
    void method(int ... a) 
    {
        System.out.println("1");
    }
     
    void method(int[] a)
    {
        System.out.println("2");
    }
}




employee e1=new employee(1,"t");

employee e2=new employee(1,"t");


hashmap.put(e1,1);

hashmap.put(e2,1);



Native query

Public static List()=Collections.Synchorized(new ArrayList());

TimeStamp lastUpated

public Result getStatus() {

TimeStamp t=getCurrectTimeStamap;


if(lastUpated-t>5 || list.size==0)
{
list=doHeavyOpertaion
lastUpated=t;
}
else
{
list.get(data);
}

}


-----------------------------------------------

==
!=
!

No any predefined function/API
no logical
no mathematical operator
no relational


public void evenOrOdd(int n)
{
boolean evenOrOdd=true;
for(int i=1;i<=n;i++)
{
if(evenOrOdd)
{
evenOrOdd=false;
}
else
{
evenOrOdd=true;
}
}

if(evenOrOdd)
syso("Even")
else
syso("odd");
}

---------------------------------------------------------


 Hello World Praksah Soni
 inosh askar pdlrowo lleh

-------------------------------------------------------
Remove K consecutive duplicates from the String
s = aabbbaccddddc, k = 3
O/P - ccdc

s = caabbbaccddddc, k = 3
O/P - dc

s = caabbbaccddddc, k = 4
O/P - caabbbaccc
